<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
-->

<hibernate-mapping package="com.libo.po">
    <class  name="com.libo.po.Students" table="STUDENTS" schema="SCOTT">
       	<cache usage="read-only"/>
        <id name="stuId" type="java.lang.Integer">
            <column name="STU_ID" precision="6" scale="0" />
            <generator class="sequence">
            	<param name="sequence">seq_stu</param>
            </generator>
        </id>
        <many-to-one name="classes" class="com.libo.po.Classes"  cascade="save-update" fetch="select">
            <column name="CLASS_ID" precision="6" scale="0" />
        </many-to-one>
        <property name="stuName" type="java.lang.String">
            <column name="STU_NAME" length="40" />
        </property>
        <property name="age" type="java.lang.Integer">
            <column name="AGE" precision="6" scale="0" />
        </property>
        <filter name="stu" condition="stu_id between :min and :max"/>
    </class>
   	<sql-query name="queryTest">
		<return alias="s" class="com.libo.po.Students"/>
		<return-join alias="c" property="s.classes"/>
		<return-scalar column="stu_name" type="java.lang.String"/>
		select s.*,c.* from students s,classes c where s.class_id=c.cls_id 
	</sql-query>
	<filter-def name="stu" >
		<filter-param name="min" type="int"/>
		<filter-param name="max" type="int"/>
	</filter-def>
</hibernate-mapping>
