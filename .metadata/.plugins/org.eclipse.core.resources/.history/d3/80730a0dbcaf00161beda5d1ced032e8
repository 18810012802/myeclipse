package com.libo.servlet.yetong;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;

import com.libo.entity.Mail_box;
import com.libo.entity.Org_employee;
import com.libo.service.impl.yetong.MailBoxServiceImpl;
import com.libo.service.yetong.MailBoxService;
import com.libo.util.PageSize;

public class ShowEmailsByLikeServlet extends HttpServlet {
	
	public void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doPost(request, response);
	}
	
	public void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		request.setCharacterEncoding("utf-8");
		response.setCharacterEncoding("utf-8");
		response.setContentType("text/html;charset=utf-8");

		// request.getParameter((String)request.getParameter("selectBy"));
		// 接收模糊查询条件
		String title = request.getParameter("type");
		Mail_box mailBox = new Mail_box();

		if (StringUtils.isNotEmpty(title)) {
			// 以title为查询条件
			mailBox.setTitle(title);
		}

		// 1、判断返回界面的值、判断是发送的邮件还是接收的邮件、
		String reStr = request.getParameter("reStr");
		if (StringUtils.isEmpty(reStr)) {
			reStr = "0";
		}
		int re = Integer.valueOf(reStr);
		// 根据页面跳转标识，判断查询人身份，设置对应身份的查询条件-state
		
		mailBox.setSendstate("0");

		// 拿到接受的发送人id
		Org_employee oEmployee = (Org_employee) request.getSession()
				
				.getAttribute("org_employee");
		Integer userid = 0;
		if (oEmployee != null) {
			userid = oEmployee.getId();

		}
		// 分页查询
		String pages = request.getParameter("page");
		if (pages == null) {
			pages = "1";
		}
		int pageNum = 0;
		pageNum = Integer.valueOf(pages);
		// MailBox mailBox=new MailBox();
		MailBoxService mailBoxService = new MailBoxServiceImpl();
		List<Mail_box> mbList = mailBoxService.getByLike(pageNum,
				PageSize.PAGE_SIZE, userid, mailBox, re);
		// 查询数据条数并计算页面数
		int count = mailBoxService.countEmails(userid, re, mailBox);
		int num = (int) Math.ceil((count / (double) PageSize.PAGE_SIZE));
		// 对查询结果进行判断跳转
		if (mbList.size() > 0) {
			request.setAttribute("mbList", mbList);
			request.setAttribute("pageNum", pageNum);
			request.setAttribute("pageSize", PageSize.PAGE_SIZE);
			request.setAttribute("num", num);
			request.setAttribute("count", count);
			request.getRequestDispatcher("Email/giveemail.jsp").forward(
					request, response);

		} else {
			PrintWriter out = response.getWriter();
			out.print("<script>location.href='Email/giveemail.jsp';alert('你没有发送邮件！');</script>");
		}
	}

}
